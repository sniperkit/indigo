// Code generated by protoc-gen-go.
// source: proto/indigo_service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/indigo_service.proto

It has these top-level messages:
	CreateIndexRequest
	CreateIndexResponse
	DeleteIndexRequest
	DeleteIndexResponse
	GetStatsRequest
	GetStatsResponse
	GetMappingRequest
	GetMappingResponse
	IndexDocumentRequest
	IndexDocumentResponse
	DeleteDocumentRequest
	DeleteDocumentResponse
	IndexBulkRequest
	IndexBulkResponse
	DeleteBulkRequest
	DeleteBulkResponse
	SearchDocumentsRequest
	SearchDocumentsResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateIndexRequest struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Mapping []byte `protobuf:"bytes,2,opt,name=mapping,proto3" json:"mapping,omitempty"`
	Type    string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Store   string `protobuf:"bytes,4,opt,name=store" json:"store,omitempty"`
}

func (m *CreateIndexRequest) Reset()                    { *m = CreateIndexRequest{} }
func (m *CreateIndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateIndexRequest) ProtoMessage()               {}
func (*CreateIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateIndexRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateIndexRequest) GetMapping() []byte {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *CreateIndexRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CreateIndexRequest) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

type CreateIndexResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateIndexResponse) Reset()                    { *m = CreateIndexResponse{} }
func (m *CreateIndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateIndexResponse) ProtoMessage()               {}
func (*CreateIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateIndexResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteIndexRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteIndexRequest) Reset()                    { *m = DeleteIndexRequest{} }
func (m *DeleteIndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteIndexRequest) ProtoMessage()               {}
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteIndexRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DeleteIndexResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteIndexResponse) Reset()                    { *m = DeleteIndexResponse{} }
func (m *DeleteIndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteIndexResponse) ProtoMessage()               {}
func (*DeleteIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteIndexResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetStatsRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetStatsRequest) Reset()                    { *m = GetStatsRequest{} }
func (m *GetStatsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStatsRequest) ProtoMessage()               {}
func (*GetStatsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetStatsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetStatsResponse struct {
	Stats []byte `protobuf:"bytes,1,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (m *GetStatsResponse) Reset()                    { *m = GetStatsResponse{} }
func (m *GetStatsResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetStatsResponse) ProtoMessage()               {}
func (*GetStatsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetStatsResponse) GetStats() []byte {
	if m != nil {
		return m.Stats
	}
	return nil
}

type GetMappingRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *GetMappingRequest) Reset()                    { *m = GetMappingRequest{} }
func (m *GetMappingRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetMappingRequest) ProtoMessage()               {}
func (*GetMappingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetMappingRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetMappingResponse struct {
	Mapping []byte `protobuf:"bytes,1,opt,name=mapping,proto3" json:"mapping,omitempty"`
}

func (m *GetMappingResponse) Reset()                    { *m = GetMappingResponse{} }
func (m *GetMappingResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetMappingResponse) ProtoMessage()               {}
func (*GetMappingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetMappingResponse) GetMapping() []byte {
	if m != nil {
		return m.Mapping
	}
	return nil
}

type IndexDocumentRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Document []byte `protobuf:"bytes,3,opt,name=document,proto3" json:"document,omitempty"`
}

func (m *IndexDocumentRequest) Reset()                    { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()               {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *IndexDocumentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IndexDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *IndexDocumentRequest) GetDocument() []byte {
	if m != nil {
		return m.Document
	}
	return nil
}

type IndexDocumentResponse struct {
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *IndexDocumentResponse) Reset()                    { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()               {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *IndexDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteDocumentRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteDocumentRequest) Reset()                    { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()               {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteDocumentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteDocumentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteDocumentResponse struct {
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *DeleteDocumentResponse) Reset()                    { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()               {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteDocumentResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type IndexBulkRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Documents []byte `protobuf:"bytes,2,opt,name=documents,proto3" json:"documents,omitempty"`
	BatchSize int32  `protobuf:"varint,3,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *IndexBulkRequest) Reset()                    { *m = IndexBulkRequest{} }
func (m *IndexBulkRequest) String() string            { return proto1.CompactTextString(m) }
func (*IndexBulkRequest) ProtoMessage()               {}
func (*IndexBulkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *IndexBulkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IndexBulkRequest) GetDocuments() []byte {
	if m != nil {
		return m.Documents
	}
	return nil
}

func (m *IndexBulkRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type IndexBulkResponse struct {
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *IndexBulkResponse) Reset()                    { *m = IndexBulkResponse{} }
func (m *IndexBulkResponse) String() string            { return proto1.CompactTextString(m) }
func (*IndexBulkResponse) ProtoMessage()               {}
func (*IndexBulkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *IndexBulkResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeleteBulkRequest struct {
	Name      string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ids       []byte `protobuf:"bytes,2,opt,name=ids,proto3" json:"ids,omitempty"`
	BatchSize int32  `protobuf:"varint,3,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *DeleteBulkRequest) Reset()                    { *m = DeleteBulkRequest{} }
func (m *DeleteBulkRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteBulkRequest) ProtoMessage()               {}
func (*DeleteBulkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DeleteBulkRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteBulkRequest) GetIds() []byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *DeleteBulkRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type DeleteBulkResponse struct {
	Count int32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *DeleteBulkResponse) Reset()                    { *m = DeleteBulkResponse{} }
func (m *DeleteBulkResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteBulkResponse) ProtoMessage()               {}
func (*DeleteBulkResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *DeleteBulkResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SearchDocumentsRequest struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	SearchRequest []byte `protobuf:"bytes,2,opt,name=searchRequest,proto3" json:"searchRequest,omitempty"`
}

func (m *SearchDocumentsRequest) Reset()                    { *m = SearchDocumentsRequest{} }
func (m *SearchDocumentsRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchDocumentsRequest) ProtoMessage()               {}
func (*SearchDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SearchDocumentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchDocumentsRequest) GetSearchRequest() []byte {
	if m != nil {
		return m.SearchRequest
	}
	return nil
}

type SearchDocumentsResponse struct {
	SearchResult []byte `protobuf:"bytes,1,opt,name=searchResult,proto3" json:"searchResult,omitempty"`
}

func (m *SearchDocumentsResponse) Reset()                    { *m = SearchDocumentsResponse{} }
func (m *SearchDocumentsResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchDocumentsResponse) ProtoMessage()               {}
func (*SearchDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SearchDocumentsResponse) GetSearchResult() []byte {
	if m != nil {
		return m.SearchResult
	}
	return nil
}

func init() {
	proto1.RegisterType((*CreateIndexRequest)(nil), "proto.CreateIndexRequest")
	proto1.RegisterType((*CreateIndexResponse)(nil), "proto.CreateIndexResponse")
	proto1.RegisterType((*DeleteIndexRequest)(nil), "proto.DeleteIndexRequest")
	proto1.RegisterType((*DeleteIndexResponse)(nil), "proto.DeleteIndexResponse")
	proto1.RegisterType((*GetStatsRequest)(nil), "proto.GetStatsRequest")
	proto1.RegisterType((*GetStatsResponse)(nil), "proto.GetStatsResponse")
	proto1.RegisterType((*GetMappingRequest)(nil), "proto.GetMappingRequest")
	proto1.RegisterType((*GetMappingResponse)(nil), "proto.GetMappingResponse")
	proto1.RegisterType((*IndexDocumentRequest)(nil), "proto.IndexDocumentRequest")
	proto1.RegisterType((*IndexDocumentResponse)(nil), "proto.IndexDocumentResponse")
	proto1.RegisterType((*DeleteDocumentRequest)(nil), "proto.DeleteDocumentRequest")
	proto1.RegisterType((*DeleteDocumentResponse)(nil), "proto.DeleteDocumentResponse")
	proto1.RegisterType((*IndexBulkRequest)(nil), "proto.IndexBulkRequest")
	proto1.RegisterType((*IndexBulkResponse)(nil), "proto.IndexBulkResponse")
	proto1.RegisterType((*DeleteBulkRequest)(nil), "proto.DeleteBulkRequest")
	proto1.RegisterType((*DeleteBulkResponse)(nil), "proto.DeleteBulkResponse")
	proto1.RegisterType((*SearchDocumentsRequest)(nil), "proto.SearchDocumentsRequest")
	proto1.RegisterType((*SearchDocumentsResponse)(nil), "proto.SearchDocumentsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Indigo service

type IndigoClient interface {
	CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error)
	DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error)
	GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error)
	GetMapping(ctx context.Context, in *GetMappingRequest, opts ...grpc.CallOption) (*GetMappingResponse, error)
	IndexDocument(ctx context.Context, in *IndexDocumentRequest, opts ...grpc.CallOption) (*IndexDocumentResponse, error)
	DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error)
	IndexBulk(ctx context.Context, in *IndexBulkRequest, opts ...grpc.CallOption) (*IndexBulkResponse, error)
	DeleteBulk(ctx context.Context, in *DeleteBulkRequest, opts ...grpc.CallOption) (*DeleteBulkResponse, error)
	SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error)
}

type indigoClient struct {
	cc *grpc.ClientConn
}

func NewIndigoClient(cc *grpc.ClientConn) IndigoClient {
	return &indigoClient{cc}
}

func (c *indigoClient) CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error) {
	out := new(CreateIndexResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/CreateIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error) {
	out := new(DeleteIndexResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) GetStats(ctx context.Context, in *GetStatsRequest, opts ...grpc.CallOption) (*GetStatsResponse, error) {
	out := new(GetStatsResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/GetStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) GetMapping(ctx context.Context, in *GetMappingRequest, opts ...grpc.CallOption) (*GetMappingResponse, error) {
	out := new(GetMappingResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/GetMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) IndexDocument(ctx context.Context, in *IndexDocumentRequest, opts ...grpc.CallOption) (*IndexDocumentResponse, error) {
	out := new(IndexDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/IndexDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error) {
	out := new(DeleteDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) IndexBulk(ctx context.Context, in *IndexBulkRequest, opts ...grpc.CallOption) (*IndexBulkResponse, error) {
	out := new(IndexBulkResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/IndexBulk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteBulk(ctx context.Context, in *DeleteBulkRequest, opts ...grpc.CallOption) (*DeleteBulkResponse, error) {
	out := new(DeleteBulkResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteBulk", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error) {
	out := new(SearchDocumentsResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/SearchDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Indigo service

type IndigoServer interface {
	CreateIndex(context.Context, *CreateIndexRequest) (*CreateIndexResponse, error)
	DeleteIndex(context.Context, *DeleteIndexRequest) (*DeleteIndexResponse, error)
	GetStats(context.Context, *GetStatsRequest) (*GetStatsResponse, error)
	GetMapping(context.Context, *GetMappingRequest) (*GetMappingResponse, error)
	IndexDocument(context.Context, *IndexDocumentRequest) (*IndexDocumentResponse, error)
	DeleteDocument(context.Context, *DeleteDocumentRequest) (*DeleteDocumentResponse, error)
	IndexBulk(context.Context, *IndexBulkRequest) (*IndexBulkResponse, error)
	DeleteBulk(context.Context, *DeleteBulkRequest) (*DeleteBulkResponse, error)
	SearchDocuments(context.Context, *SearchDocumentsRequest) (*SearchDocumentsResponse, error)
}

func RegisterIndigoServer(s *grpc.Server, srv IndigoServer) {
	s.RegisterService(&_Indigo_serviceDesc, srv)
}

func _Indigo_CreateIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).CreateIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/CreateIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).CreateIndex(ctx, req.(*CreateIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteIndex(ctx, req.(*DeleteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).GetStats(ctx, req.(*GetStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_GetMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).GetMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/GetMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).GetMapping(ctx, req.(*GetMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_IndexDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).IndexDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/IndexDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).IndexDocument(ctx, req.(*IndexDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteDocument(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_IndexBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).IndexBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/IndexBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).IndexBulk(ctx, req.(*IndexBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteBulk(ctx, req.(*DeleteBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_SearchDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).SearchDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/SearchDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).SearchDocuments(ctx, req.(*SearchDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Indigo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Indigo",
	HandlerType: (*IndigoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIndex",
			Handler:    _Indigo_CreateIndex_Handler,
		},
		{
			MethodName: "DeleteIndex",
			Handler:    _Indigo_DeleteIndex_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Indigo_GetStats_Handler,
		},
		{
			MethodName: "GetMapping",
			Handler:    _Indigo_GetMapping_Handler,
		},
		{
			MethodName: "IndexDocument",
			Handler:    _Indigo_IndexDocument_Handler,
		},
		{
			MethodName: "DeleteDocument",
			Handler:    _Indigo_DeleteDocument_Handler,
		},
		{
			MethodName: "IndexBulk",
			Handler:    _Indigo_IndexBulk_Handler,
		},
		{
			MethodName: "DeleteBulk",
			Handler:    _Indigo_DeleteBulk_Handler,
		},
		{
			MethodName: "SearchDocuments",
			Handler:    _Indigo_SearchDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/indigo_service.proto",
}

func init() { proto1.RegisterFile("proto/indigo_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 562 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0xef, 0x6f, 0xd3, 0x30,
	0x10, 0x5d, 0xbb, 0x65, 0xac, 0x47, 0xb7, 0xb5, 0x66, 0x6b, 0x53, 0x53, 0xd0, 0x64, 0x81, 0xe8,
	0x90, 0x28, 0x12, 0x7c, 0x44, 0x93, 0x10, 0x9b, 0x98, 0x26, 0x81, 0x90, 0x5c, 0x09, 0x3e, 0xa2,
	0x34, 0xb1, 0xb6, 0x88, 0x36, 0x09, 0xb1, 0x83, 0x80, 0x3f, 0x84, 0xbf, 0x17, 0xc5, 0x76, 0x9c,
	0x9f, 0x4d, 0x11, 0x9f, 0x12, 0xdf, 0x3d, 0xbf, 0x7b, 0x3e, 0xdf, 0x33, 0xe0, 0x28, 0x0e, 0x45,
	0xf8, 0xd2, 0x0f, 0x3c, 0xff, 0x36, 0xfc, 0xca, 0x59, 0xfc, 0xc3, 0x77, 0xd9, 0x5c, 0x06, 0x91,
	0x25, 0x3f, 0x64, 0x05, 0xe8, 0x32, 0x66, 0x8e, 0x60, 0x37, 0x81, 0xc7, 0x7e, 0x52, 0xf6, 0x3d,
	0x61, 0x5c, 0x20, 0x04, 0x7b, 0x81, 0xb3, 0x66, 0x76, 0xe7, 0xac, 0x33, 0xeb, 0x51, 0xf9, 0x8f,
	0x6c, 0xb8, 0xb7, 0x76, 0xa2, 0xc8, 0x0f, 0x6e, 0xed, 0xee, 0x59, 0x67, 0xd6, 0xa7, 0xd9, 0x32,
	0x45, 0x8b, 0x5f, 0x11, 0xb3, 0x77, 0x15, 0x3a, 0xfd, 0x47, 0x27, 0x60, 0x71, 0x11, 0xc6, 0xcc,
	0xde, 0x93, 0x41, 0xb5, 0x20, 0xe7, 0xf0, 0xa0, 0x54, 0x8d, 0x47, 0x61, 0xc0, 0x59, 0x53, 0x39,
	0x32, 0x03, 0x74, 0xc5, 0x56, 0x6c, 0xbb, 0xb0, 0x94, 0xb4, 0x84, 0x6c, 0x21, 0x7d, 0x0a, 0xc7,
	0xd7, 0x4c, 0x2c, 0x84, 0x23, 0x78, 0x1b, 0xe3, 0x0c, 0x06, 0x39, 0x4c, 0xd3, 0xc9, 0x03, 0x39,
	0x82, 0x4b, 0x60, 0x9f, 0xaa, 0x05, 0x79, 0x06, 0xc3, 0x6b, 0x26, 0x3e, 0xaa, 0x46, 0xb4, 0x51,
	0xce, 0x01, 0x15, 0x81, 0x9a, 0xb4, 0xd0, 0xd3, 0x4e, 0xa9, 0xa7, 0xe4, 0x33, 0x9c, 0xc8, 0xe3,
	0x5c, 0x85, 0x6e, 0xb2, 0x66, 0x81, 0x68, 0xbb, 0x99, 0x23, 0xe8, 0xfa, 0x9e, 0xbc, 0x94, 0x1e,
	0xed, 0xfa, 0x1e, 0xc2, 0x70, 0xe0, 0xe9, 0x6d, 0xf2, 0x4e, 0xfa, 0xd4, 0xac, 0xc9, 0x0b, 0x38,
	0xad, 0xf0, 0xe6, 0xe7, 0x73, 0xc3, 0x24, 0x10, 0x92, 0xd9, 0xa2, 0x6a, 0x41, 0xde, 0xc0, 0xa9,
	0xea, 0xed, 0x7f, 0xe8, 0x20, 0x73, 0x18, 0x55, 0x37, 0xb7, 0x16, 0x5b, 0xc2, 0x40, 0x6a, 0x7b,
	0x97, 0xac, 0xbe, 0xb5, 0xd5, 0x99, 0x42, 0x2f, 0x3b, 0x0f, 0xd7, 0xb3, 0x98, 0x07, 0xd2, 0xec,
	0xd2, 0x11, 0xee, 0xdd, 0xc2, 0xff, 0xad, 0x46, 0xd2, 0xa2, 0x79, 0x80, 0x9c, 0xc3, 0xb0, 0x50,
	0xa3, 0x55, 0xce, 0x17, 0x18, 0x2a, 0xf9, 0xdb, 0xf4, 0x0c, 0x60, 0xd7, 0xf7, 0x32, 0x25, 0xe9,
	0xef, 0x16, 0x0d, 0xcf, 0xb3, 0xd1, 0xfe, 0x07, 0x11, 0x14, 0x46, 0x0b, 0xe6, 0xc4, 0xee, 0x5d,
	0xd6, 0xc3, 0xb6, 0xc1, 0x45, 0x4f, 0xe0, 0x90, 0x4b, 0xb4, 0x06, 0x69, 0x4d, 0xe5, 0x20, 0xb9,
	0x80, 0x71, 0x8d, 0x53, 0x8b, 0x20, 0xd0, 0xcf, 0xb0, 0x3c, 0x59, 0x09, 0x3d, 0x95, 0xa5, 0xd8,
	0xab, 0x3f, 0x16, 0xec, 0xdf, 0xc8, 0x27, 0x05, 0xbd, 0x87, 0xfb, 0x05, 0x3f, 0xa3, 0x89, 0x7a,
	0x5b, 0xe6, 0xf5, 0x17, 0x05, 0xe3, 0xa6, 0x94, 0x2a, 0x4a, 0x76, 0x52, 0x9e, 0x82, 0x85, 0x0d,
	0x4f, 0xfd, 0x01, 0x30, 0x3c, 0x0d, 0x8e, 0x27, 0x3b, 0xe8, 0x02, 0x0e, 0x32, 0xe3, 0xa2, 0x91,
	0x46, 0x56, 0x0c, 0x8f, 0xc7, 0xb5, 0xb8, 0xd9, 0x7e, 0x09, 0x90, 0x9b, 0x14, 0xd9, 0x39, 0xb0,
	0x6c, 0x70, 0x3c, 0x69, 0xc8, 0x18, 0x92, 0x0f, 0x70, 0x58, 0x72, 0x18, 0x7a, 0xa8, 0xd1, 0x4d,
	0x7e, 0xc6, 0xd3, 0xe6, 0xa4, 0x61, 0xfb, 0x04, 0x47, 0x65, 0x0f, 0xa1, 0x69, 0xa9, 0x03, 0x55,
	0xbe, 0x47, 0x1b, 0xb2, 0x86, 0xf0, 0x2d, 0xf4, 0x8c, 0x01, 0xd0, 0xb8, 0x58, 0xbd, 0x30, 0xe6,
	0xd8, 0xae, 0x27, 0x8a, 0x5d, 0xca, 0xc7, 0xd7, 0x74, 0xa9, 0x66, 0x15, 0x3c, 0x69, 0xc8, 0x18,
	0x12, 0x0a, 0xc7, 0x95, 0x19, 0x44, 0x99, 0xf4, 0xe6, 0x79, 0xc7, 0x8f, 0x37, 0xa5, 0x33, 0xce,
	0xe5, 0xbe, 0x04, 0xbc, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x65, 0x63, 0x20, 0x32, 0xf7, 0x06,
	0x00, 0x00,
}
