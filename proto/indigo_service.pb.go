// Code generated by protoc-gen-go.
// source: proto/indigo_service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/indigo_service.proto

It has these top-level messages:
	CreateIndexRequest
	CreateIndexResponse
	DeleteIndexRequest
	DeleteIndexResponse
	GetMappingRequest
	GetMappingResponse
	IndexDocumentRequest
	IndexDocumentResponse
	DeleteDocumentRequest
	DeleteDocumentResponse
	IndexDocumentsRequest
	IndexDocumentsResponse
	DeleteDocumentsRequest
	DeleteDocumentsResponse
	SearchDocumentsRequest
	SearchDocumentsResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateIndexRequest struct {
	IndexName    string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	IndexMapping string `protobuf:"bytes,2,opt,name=indexMapping" json:"indexMapping,omitempty"`
	IndexType    string `protobuf:"bytes,3,opt,name=indexType" json:"indexType,omitempty"`
	IndexStore   string `protobuf:"bytes,4,opt,name=indexStore" json:"indexStore,omitempty"`
}

func (m *CreateIndexRequest) Reset()                    { *m = CreateIndexRequest{} }
func (m *CreateIndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateIndexRequest) ProtoMessage()               {}
func (*CreateIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CreateIndexRequest) GetIndexMapping() string {
	if m != nil {
		return m.IndexMapping
	}
	return ""
}

func (m *CreateIndexRequest) GetIndexType() string {
	if m != nil {
		return m.IndexType
	}
	return ""
}

func (m *CreateIndexRequest) GetIndexStore() string {
	if m != nil {
		return m.IndexStore
	}
	return ""
}

type CreateIndexResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *CreateIndexResponse) Reset()                    { *m = CreateIndexResponse{} }
func (m *CreateIndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateIndexResponse) ProtoMessage()               {}
func (*CreateIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateIndexResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type DeleteIndexRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
}

func (m *DeleteIndexRequest) Reset()                    { *m = DeleteIndexRequest{} }
func (m *DeleteIndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteIndexRequest) ProtoMessage()               {}
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type DeleteIndexResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteIndexResponse) Reset()                    { *m = DeleteIndexResponse{} }
func (m *DeleteIndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteIndexResponse) ProtoMessage()               {}
func (*DeleteIndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteIndexResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type GetMappingRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
}

func (m *GetMappingRequest) Reset()                    { *m = GetMappingRequest{} }
func (m *GetMappingRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetMappingRequest) ProtoMessage()               {}
func (*GetMappingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetMappingRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type GetMappingResponse struct {
	Mapping string `protobuf:"bytes,1,opt,name=mapping" json:"mapping,omitempty"`
}

func (m *GetMappingResponse) Reset()                    { *m = GetMappingResponse{} }
func (m *GetMappingResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetMappingResponse) ProtoMessage()               {}
func (*GetMappingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetMappingResponse) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

type IndexDocumentRequest struct {
	IndexName  string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	DocumentID string `protobuf:"bytes,2,opt,name=documentID" json:"documentID,omitempty"`
	Document   string `protobuf:"bytes,3,opt,name=document" json:"document,omitempty"`
}

func (m *IndexDocumentRequest) Reset()                    { *m = IndexDocumentRequest{} }
func (m *IndexDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentRequest) ProtoMessage()               {}
func (*IndexDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *IndexDocumentRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexDocumentRequest) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

func (m *IndexDocumentRequest) GetDocument() string {
	if m != nil {
		return m.Document
	}
	return ""
}

type IndexDocumentResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *IndexDocumentResponse) Reset()                    { *m = IndexDocumentResponse{} }
func (m *IndexDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentResponse) ProtoMessage()               {}
func (*IndexDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *IndexDocumentResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type DeleteDocumentRequest struct {
	IndexName  string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	DocumentID string `protobuf:"bytes,2,opt,name=documentID" json:"documentID,omitempty"`
}

func (m *DeleteDocumentRequest) Reset()                    { *m = DeleteDocumentRequest{} }
func (m *DeleteDocumentRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentRequest) ProtoMessage()               {}
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteDocumentRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *DeleteDocumentRequest) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

type DeleteDocumentResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteDocumentResponse) Reset()                    { *m = DeleteDocumentResponse{} }
func (m *DeleteDocumentResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentResponse) ProtoMessage()               {}
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteDocumentResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type IndexDocumentsRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	Documents string `protobuf:"bytes,2,opt,name=documents" json:"documents,omitempty"`
	BatchSize int32  `protobuf:"varint,3,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *IndexDocumentsRequest) Reset()                    { *m = IndexDocumentsRequest{} }
func (m *IndexDocumentsRequest) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentsRequest) ProtoMessage()               {}
func (*IndexDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *IndexDocumentsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexDocumentsRequest) GetDocuments() string {
	if m != nil {
		return m.Documents
	}
	return ""
}

func (m *IndexDocumentsRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type IndexDocumentsResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *IndexDocumentsResponse) Reset()                    { *m = IndexDocumentsResponse{} }
func (m *IndexDocumentsResponse) String() string            { return proto1.CompactTextString(m) }
func (*IndexDocumentsResponse) ProtoMessage()               {}
func (*IndexDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *IndexDocumentsResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type DeleteDocumentsRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	Ids       string `protobuf:"bytes,2,opt,name=ids" json:"ids,omitempty"`
	BatchSize int32  `protobuf:"varint,3,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *DeleteDocumentsRequest) Reset()                    { *m = DeleteDocumentsRequest{} }
func (m *DeleteDocumentsRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentsRequest) ProtoMessage()               {}
func (*DeleteDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DeleteDocumentsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *DeleteDocumentsRequest) GetIds() string {
	if m != nil {
		return m.Ids
	}
	return ""
}

func (m *DeleteDocumentsRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type DeleteDocumentsResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *DeleteDocumentsResponse) Reset()                    { *m = DeleteDocumentsResponse{} }
func (m *DeleteDocumentsResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteDocumentsResponse) ProtoMessage()               {}
func (*DeleteDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *DeleteDocumentsResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type SearchDocumentsRequest struct {
	IndexName     string `protobuf:"bytes,1,opt,name=indexName" json:"indexName,omitempty"`
	SearchRequest string `protobuf:"bytes,2,opt,name=searchRequest" json:"searchRequest,omitempty"`
}

func (m *SearchDocumentsRequest) Reset()                    { *m = SearchDocumentsRequest{} }
func (m *SearchDocumentsRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchDocumentsRequest) ProtoMessage()               {}
func (*SearchDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SearchDocumentsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *SearchDocumentsRequest) GetSearchRequest() string {
	if m != nil {
		return m.SearchRequest
	}
	return ""
}

type SearchDocumentsResponse struct {
	SearchResult string `protobuf:"bytes,1,opt,name=searchResult" json:"searchResult,omitempty"`
}

func (m *SearchDocumentsResponse) Reset()                    { *m = SearchDocumentsResponse{} }
func (m *SearchDocumentsResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchDocumentsResponse) ProtoMessage()               {}
func (*SearchDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SearchDocumentsResponse) GetSearchResult() string {
	if m != nil {
		return m.SearchResult
	}
	return ""
}

func init() {
	proto1.RegisterType((*CreateIndexRequest)(nil), "proto.CreateIndexRequest")
	proto1.RegisterType((*CreateIndexResponse)(nil), "proto.CreateIndexResponse")
	proto1.RegisterType((*DeleteIndexRequest)(nil), "proto.DeleteIndexRequest")
	proto1.RegisterType((*DeleteIndexResponse)(nil), "proto.DeleteIndexResponse")
	proto1.RegisterType((*GetMappingRequest)(nil), "proto.GetMappingRequest")
	proto1.RegisterType((*GetMappingResponse)(nil), "proto.GetMappingResponse")
	proto1.RegisterType((*IndexDocumentRequest)(nil), "proto.IndexDocumentRequest")
	proto1.RegisterType((*IndexDocumentResponse)(nil), "proto.IndexDocumentResponse")
	proto1.RegisterType((*DeleteDocumentRequest)(nil), "proto.DeleteDocumentRequest")
	proto1.RegisterType((*DeleteDocumentResponse)(nil), "proto.DeleteDocumentResponse")
	proto1.RegisterType((*IndexDocumentsRequest)(nil), "proto.IndexDocumentsRequest")
	proto1.RegisterType((*IndexDocumentsResponse)(nil), "proto.IndexDocumentsResponse")
	proto1.RegisterType((*DeleteDocumentsRequest)(nil), "proto.DeleteDocumentsRequest")
	proto1.RegisterType((*DeleteDocumentsResponse)(nil), "proto.DeleteDocumentsResponse")
	proto1.RegisterType((*SearchDocumentsRequest)(nil), "proto.SearchDocumentsRequest")
	proto1.RegisterType((*SearchDocumentsResponse)(nil), "proto.SearchDocumentsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Indigo service

type IndigoClient interface {
	CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error)
	DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error)
	GetMapping(ctx context.Context, in *GetMappingRequest, opts ...grpc.CallOption) (*GetMappingResponse, error)
	IndexDocument(ctx context.Context, in *IndexDocumentRequest, opts ...grpc.CallOption) (*IndexDocumentResponse, error)
	DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error)
	IndexDocuments(ctx context.Context, in *IndexDocumentsRequest, opts ...grpc.CallOption) (*IndexDocumentsResponse, error)
	DeleteDocuments(ctx context.Context, in *DeleteDocumentsRequest, opts ...grpc.CallOption) (*DeleteDocumentsResponse, error)
	SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error)
}

type indigoClient struct {
	cc *grpc.ClientConn
}

func NewIndigoClient(cc *grpc.ClientConn) IndigoClient {
	return &indigoClient{cc}
}

func (c *indigoClient) CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error) {
	out := new(CreateIndexResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/CreateIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error) {
	out := new(DeleteIndexResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) GetMapping(ctx context.Context, in *GetMappingRequest, opts ...grpc.CallOption) (*GetMappingResponse, error) {
	out := new(GetMappingResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/GetMapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) IndexDocument(ctx context.Context, in *IndexDocumentRequest, opts ...grpc.CallOption) (*IndexDocumentResponse, error) {
	out := new(IndexDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/IndexDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteDocument(ctx context.Context, in *DeleteDocumentRequest, opts ...grpc.CallOption) (*DeleteDocumentResponse, error) {
	out := new(DeleteDocumentResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteDocument", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) IndexDocuments(ctx context.Context, in *IndexDocumentsRequest, opts ...grpc.CallOption) (*IndexDocumentsResponse, error) {
	out := new(IndexDocumentsResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/IndexDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) DeleteDocuments(ctx context.Context, in *DeleteDocumentsRequest, opts ...grpc.CallOption) (*DeleteDocumentsResponse, error) {
	out := new(DeleteDocumentsResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/DeleteDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indigoClient) SearchDocuments(ctx context.Context, in *SearchDocumentsRequest, opts ...grpc.CallOption) (*SearchDocumentsResponse, error) {
	out := new(SearchDocumentsResponse)
	err := grpc.Invoke(ctx, "/proto.Indigo/SearchDocuments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Indigo service

type IndigoServer interface {
	CreateIndex(context.Context, *CreateIndexRequest) (*CreateIndexResponse, error)
	DeleteIndex(context.Context, *DeleteIndexRequest) (*DeleteIndexResponse, error)
	GetMapping(context.Context, *GetMappingRequest) (*GetMappingResponse, error)
	IndexDocument(context.Context, *IndexDocumentRequest) (*IndexDocumentResponse, error)
	DeleteDocument(context.Context, *DeleteDocumentRequest) (*DeleteDocumentResponse, error)
	IndexDocuments(context.Context, *IndexDocumentsRequest) (*IndexDocumentsResponse, error)
	DeleteDocuments(context.Context, *DeleteDocumentsRequest) (*DeleteDocumentsResponse, error)
	SearchDocuments(context.Context, *SearchDocumentsRequest) (*SearchDocumentsResponse, error)
}

func RegisterIndigoServer(s *grpc.Server, srv IndigoServer) {
	s.RegisterService(&_Indigo_serviceDesc, srv)
}

func _Indigo_CreateIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).CreateIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/CreateIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).CreateIndex(ctx, req.(*CreateIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteIndex(ctx, req.(*DeleteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_GetMapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).GetMapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/GetMapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).GetMapping(ctx, req.(*GetMappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_IndexDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).IndexDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/IndexDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).IndexDocument(ctx, req.(*IndexDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteDocument(ctx, req.(*DeleteDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_IndexDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).IndexDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/IndexDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).IndexDocuments(ctx, req.(*IndexDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_DeleteDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).DeleteDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/DeleteDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).DeleteDocuments(ctx, req.(*DeleteDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Indigo_SearchDocuments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndigoServer).SearchDocuments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Indigo/SearchDocuments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndigoServer).SearchDocuments(ctx, req.(*SearchDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Indigo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Indigo",
	HandlerType: (*IndigoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIndex",
			Handler:    _Indigo_CreateIndex_Handler,
		},
		{
			MethodName: "DeleteIndex",
			Handler:    _Indigo_DeleteIndex_Handler,
		},
		{
			MethodName: "GetMapping",
			Handler:    _Indigo_GetMapping_Handler,
		},
		{
			MethodName: "IndexDocument",
			Handler:    _Indigo_IndexDocument_Handler,
		},
		{
			MethodName: "DeleteDocument",
			Handler:    _Indigo_DeleteDocument_Handler,
		},
		{
			MethodName: "IndexDocuments",
			Handler:    _Indigo_IndexDocuments_Handler,
		},
		{
			MethodName: "DeleteDocuments",
			Handler:    _Indigo_DeleteDocuments_Handler,
		},
		{
			MethodName: "SearchDocuments",
			Handler:    _Indigo_SearchDocuments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/indigo_service.proto",
}

func init() { proto1.RegisterFile("proto/indigo_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 512 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x94, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xc7, 0x13, 0xda, 0x06, 0x32, 0xb4, 0x3c, 0x06, 0x9a, 0xba, 0x26, 0x44, 0x68, 0xc5, 0x81,
	0x0b, 0x29, 0x2d, 0x67, 0x4e, 0x8d, 0x40, 0x91, 0x78, 0x48, 0x09, 0xdc, 0x90, 0x90, 0x9b, 0x0c,
	0xad, 0xa5, 0xc6, 0x76, 0xbd, 0x1b, 0x04, 0x7c, 0x0e, 0xbe, 0x2a, 0x77, 0xe4, 0xf5, 0x7a, 0xb3,
	0xbb, 0xde, 0xc8, 0x89, 0xc4, 0x29, 0x99, 0xd7, 0x7f, 0x7e, 0xeb, 0x9d, 0x1d, 0x08, 0xb3, 0x3c,
	0x15, 0xe9, 0x49, 0x9c, 0xcc, 0xe3, 0xcb, 0xf4, 0x1b, 0xa7, 0xfc, 0x47, 0x3c, 0xa3, 0xa1, 0x74,
	0xe2, 0x9e, 0xfc, 0x61, 0x7f, 0xda, 0x80, 0xe7, 0x39, 0x45, 0x82, 0xc6, 0xc9, 0x9c, 0x7e, 0x4e,
	0xe8, 0x66, 0x49, 0x5c, 0x60, 0x1f, 0xba, 0x71, 0x61, 0x7f, 0x8c, 0x16, 0x14, 0xb4, 0x9f, 0xb5,
	0x5f, 0x74, 0x27, 0x2b, 0x07, 0x32, 0xd8, 0x97, 0xc6, 0x87, 0x28, 0xcb, 0xe2, 0xe4, 0x32, 0xb8,
	0x25, 0x13, 0x2c, 0x9f, 0x56, 0xf8, 0xfc, 0x2b, 0xa3, 0x60, 0xc7, 0x50, 0x28, 0x1c, 0x38, 0x00,
	0x90, 0xc6, 0x54, 0xa4, 0x39, 0x05, 0xbb, 0x32, 0x6c, 0x78, 0xd8, 0x4b, 0x78, 0x64, 0x51, 0xf1,
	0x2c, 0x4d, 0x38, 0x61, 0x0f, 0x3a, 0x39, 0xf1, 0xe5, 0xb5, 0x50, 0x4c, 0xca, 0x62, 0x67, 0x80,
	0x23, 0xba, 0xa6, 0x6d, 0x0e, 0x51, 0xb4, 0xb0, 0x6a, 0x1a, 0x5a, 0x9c, 0xc2, 0xc3, 0x77, 0x24,
	0xd4, 0xe9, 0x36, 0xeb, 0x30, 0x04, 0x34, 0x4b, 0x54, 0x83, 0x00, 0x6e, 0x2f, 0xd4, 0x77, 0x2b,
	0x2b, 0x2a, 0x93, 0x65, 0xf0, 0x58, 0xb2, 0x8c, 0xd2, 0xd9, 0x72, 0x41, 0x89, 0xd8, 0xec, 0x32,
	0x06, 0x00, 0x73, 0x55, 0x30, 0x1e, 0xa9, 0xab, 0x30, 0x3c, 0x18, 0xc2, 0x9d, 0xca, 0x52, 0xf7,
	0xa0, 0x6d, 0x76, 0x02, 0x87, 0x4e, 0xc7, 0x86, 0xaf, 0xf0, 0x05, 0x0e, 0xcb, 0x8f, 0xf6, 0x5f,
	0x19, 0xd9, 0x2b, 0xe8, 0xb9, 0xb2, 0x0d, 0x20, 0x37, 0x0e, 0x39, 0xdf, 0x0c, 0xa4, 0x0f, 0xdd,
	0xaa, 0x2d, 0x57, 0x1c, 0x2b, 0x47, 0x11, 0xbd, 0x88, 0xc4, 0xec, 0x6a, 0x1a, 0xff, 0x2e, 0x67,
	0x76, 0x6f, 0xb2, 0x72, 0x14, 0x90, 0x6e, 0xcb, 0x06, 0xc8, 0xef, 0xee, 0xb1, 0x36, 0xa4, 0x7c,
	0x00, 0x3b, 0xf1, 0xbc, 0xe2, 0x2b, 0xfe, 0x36, 0x90, 0x9d, 0xc2, 0x51, 0xad, 0x4f, 0x03, 0xda,
	0x57, 0xe8, 0x4d, 0x29, 0xca, 0x67, 0x57, 0x5b, 0xa2, 0x3d, 0x87, 0x03, 0x2e, 0xeb, 0x54, 0xba,
	0x82, 0xb4, 0x9d, 0xec, 0x0d, 0x1c, 0xd5, 0xd4, 0x15, 0x10, 0x83, 0xfd, 0x2a, 0xd7, 0xc0, 0xb2,
	0x7c, 0x67, 0x7f, 0x77, 0xa1, 0x33, 0x96, 0x4b, 0x0b, 0xdf, 0xc2, 0x5d, 0x63, 0x11, 0xe0, 0x71,
	0xb9, 0xbd, 0x86, 0xf5, 0x95, 0x15, 0x86, 0xbe, 0x50, 0xd9, 0x94, 0xb5, 0x0a, 0x1d, 0xe3, 0xb5,
	0x6b, 0x9d, 0xfa, 0xd6, 0xd0, 0x3a, 0x9e, 0xe5, 0xc0, 0x5a, 0x78, 0x0e, 0xb0, 0x7a, 0xd3, 0x18,
	0xa8, 0xdc, 0xda, 0x66, 0x08, 0x8f, 0x3d, 0x11, 0x2d, 0xf2, 0x1e, 0x0e, 0xac, 0x49, 0xc2, 0x27,
	0x2a, 0xdb, 0xf7, 0xfc, 0xc3, 0xbe, 0x3f, 0xa8, 0xd5, 0x3e, 0xc1, 0x3d, 0xfb, 0xf6, 0xb1, 0x6f,
	0x1d, 0xc1, 0xd5, 0x7b, 0xba, 0x26, 0x6a, 0x0a, 0xda, 0x83, 0x8e, 0x5e, 0x04, 0xee, 0x0a, 0xfa,
	0x5f, 0x07, 0x6b, 0xe1, 0x04, 0xee, 0x3b, 0xf3, 0x89, 0x7e, 0x08, 0x2d, 0x39, 0x58, 0x17, 0x36,
	0x35, 0x9d, 0x11, 0xd3, 0x9a, 0xfe, 0xc1, 0xd6, 0x9a, 0x6b, 0x26, 0x93, 0xb5, 0x2e, 0x3a, 0x32,
	0xe1, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x43, 0xdf, 0x36, 0x78, 0x38, 0x07, 0x00, 0x00,
}
