// Code generated by protoc-gen-go.
// source: proto/bleve_service.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/bleve_service.proto

It has these top-level messages:
	MappingRequest
	MappingResponse
	IndexRequest
	DeleteRequest
	IndexResponse
	SearchRequest
	SearchResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type MappingRequest struct {
}

func (m *MappingRequest) Reset()                    { *m = MappingRequest{} }
func (m *MappingRequest) String() string            { return proto1.CompactTextString(m) }
func (*MappingRequest) ProtoMessage()               {}
func (*MappingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type MappingResponse struct {
	Mapping string `protobuf:"bytes,1,opt,name=mapping" json:"mapping,omitempty"`
}

func (m *MappingResponse) Reset()                    { *m = MappingResponse{} }
func (m *MappingResponse) String() string            { return proto1.CompactTextString(m) }
func (*MappingResponse) ProtoMessage()               {}
func (*MappingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MappingResponse) GetMapping() string {
	if m != nil {
		return m.Mapping
	}
	return ""
}

type IndexRequest struct {
	Documents string `protobuf:"bytes,1,opt,name=documents" json:"documents,omitempty"`
	BatchSize int32  `protobuf:"varint,2,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *IndexRequest) Reset()                    { *m = IndexRequest{} }
func (m *IndexRequest) String() string            { return proto1.CompactTextString(m) }
func (*IndexRequest) ProtoMessage()               {}
func (*IndexRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IndexRequest) GetDocuments() string {
	if m != nil {
		return m.Documents
	}
	return ""
}

func (m *IndexRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type DeleteRequest struct {
	Ids       string `protobuf:"bytes,1,opt,name=ids" json:"ids,omitempty"`
	BatchSize int32  `protobuf:"varint,2,opt,name=batchSize" json:"batchSize,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteRequest) GetIds() string {
	if m != nil {
		return m.Ids
	}
	return ""
}

func (m *DeleteRequest) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

type IndexResponse struct {
	DocumentCount int32 `protobuf:"varint,1,opt,name=documentCount" json:"documentCount,omitempty"`
}

func (m *IndexResponse) Reset()                    { *m = IndexResponse{} }
func (m *IndexResponse) String() string            { return proto1.CompactTextString(m) }
func (*IndexResponse) ProtoMessage()               {}
func (*IndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *IndexResponse) GetDocumentCount() int32 {
	if m != nil {
		return m.DocumentCount
	}
	return 0
}

type SearchRequest struct {
	Request string `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto1.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SearchRequest) GetRequest() string {
	if m != nil {
		return m.Request
	}
	return ""
}

type SearchResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto1.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SearchResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto1.RegisterType((*MappingRequest)(nil), "proto.MappingRequest")
	proto1.RegisterType((*MappingResponse)(nil), "proto.MappingResponse")
	proto1.RegisterType((*IndexRequest)(nil), "proto.IndexRequest")
	proto1.RegisterType((*DeleteRequest)(nil), "proto.DeleteRequest")
	proto1.RegisterType((*IndexResponse)(nil), "proto.IndexResponse")
	proto1.RegisterType((*SearchRequest)(nil), "proto.SearchRequest")
	proto1.RegisterType((*SearchResponse)(nil), "proto.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bleve service

type BleveClient interface {
	Mapping(ctx context.Context, in *MappingRequest, opts ...grpc.CallOption) (*MappingResponse, error)
	Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*IndexResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*IndexResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
}

type bleveClient struct {
	cc *grpc.ClientConn
}

func NewBleveClient(cc *grpc.ClientConn) BleveClient {
	return &bleveClient{cc}
}

func (c *bleveClient) Mapping(ctx context.Context, in *MappingRequest, opts ...grpc.CallOption) (*MappingResponse, error) {
	out := new(MappingResponse)
	err := grpc.Invoke(ctx, "/proto.Bleve/Mapping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bleveClient) Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*IndexResponse, error) {
	out := new(IndexResponse)
	err := grpc.Invoke(ctx, "/proto.Bleve/Index", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bleveClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*IndexResponse, error) {
	out := new(IndexResponse)
	err := grpc.Invoke(ctx, "/proto.Bleve/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bleveClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := grpc.Invoke(ctx, "/proto.Bleve/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bleve service

type BleveServer interface {
	Mapping(context.Context, *MappingRequest) (*MappingResponse, error)
	Index(context.Context, *IndexRequest) (*IndexResponse, error)
	Delete(context.Context, *DeleteRequest) (*IndexResponse, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
}

func RegisterBleveServer(s *grpc.Server, srv BleveServer) {
	s.RegisterService(&_Bleve_serviceDesc, srv)
}

func _Bleve_Mapping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MappingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BleveServer).Mapping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bleve/Mapping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BleveServer).Mapping(ctx, req.(*MappingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bleve_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BleveServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bleve/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BleveServer).Index(ctx, req.(*IndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bleve_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BleveServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bleve/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BleveServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bleve_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BleveServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bleve/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BleveServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bleve_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Bleve",
	HandlerType: (*BleveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mapping",
			Handler:    _Bleve_Mapping_Handler,
		},
		{
			MethodName: "Index",
			Handler:    _Bleve_Index_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Bleve_Delete_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Bleve_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/bleve_service.proto",
}

func init() { proto1.RegisterFile("proto/bleve_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0xad, 0xd2, 0x8e, 0x1d, 0xec, 0x1c, 0xd1, 0x8d, 0x5a, 0x76, 0x31, 0x82, 0x17, 0x13,
	0x61, 0x03, 0xff, 0x82, 0x37, 0x82, 0x7a, 0xa3, 0xe0, 0x4d, 0xf7, 0x00, 0x92, 0x75, 0x87, 0x2d,
	0xd0, 0x25, 0xb5, 0x49, 0x87, 0xf8, 0xc8, 0x3e, 0x85, 0xac, 0x49, 0x3a, 0x3b, 0x10, 0xaf, 0x9a,
	0xf3, 0xeb, 0x77, 0xbe, 0x93, 0xf3, 0x05, 0x4e, 0xf3, 0x42, 0x6a, 0x39, 0x99, 0x65, 0xb8, 0xc6,
	0x77, 0x85, 0xc5, 0x9a, 0xa7, 0x38, 0xae, 0x18, 0xf1, 0xab, 0x4f, 0x3c, 0x58, 0x48, 0xb9, 0xc8,
	0x70, 0xc2, 0x72, 0x3e, 0x61, 0x42, 0x48, 0xcd, 0x34, 0x97, 0x42, 0x19, 0x11, 0xed, 0x42, 0xe7,
	0x8d, 0xe5, 0x39, 0x17, 0x8b, 0x04, 0x3f, 0x4a, 0x54, 0x9a, 0x5e, 0xc0, 0x51, 0x4d, 0x54, 0x2e,
	0x85, 0x42, 0x12, 0x41, 0x6b, 0x65, 0x50, 0xe4, 0x0d, 0xbd, 0x51, 0x3b, 0x71, 0x25, 0x7d, 0x85,
	0xc3, 0x17, 0x31, 0xc7, 0x4f, 0xdb, 0x4c, 0x06, 0xd0, 0x9e, 0xcb, 0xb4, 0x5c, 0xa1, 0xd0, 0xca,
	0x6a, 0xb7, 0x60, 0xf3, 0x77, 0xc6, 0x74, 0xba, 0x9c, 0xf2, 0x2f, 0x8c, 0xf6, 0x87, 0xde, 0xc8,
	0x4f, 0xb6, 0x80, 0x3e, 0x40, 0xf8, 0x8c, 0x19, 0x6a, 0x74, 0x66, 0x5d, 0x38, 0xe0, 0x73, 0x67,
	0xb3, 0x39, 0xfe, 0x63, 0x70, 0x03, 0xa1, 0xbd, 0x8c, 0xbd, 0xf7, 0x19, 0x84, 0x6e, 0xf8, 0x93,
	0x2c, 0x85, 0xae, 0xac, 0xfc, 0xa4, 0x09, 0xe9, 0x39, 0x84, 0x53, 0x64, 0x45, 0xba, 0x74, 0x73,
	0x23, 0x68, 0x15, 0xe6, 0xe8, 0xd6, 0xb5, 0x25, 0x1d, 0x41, 0xc7, 0x49, 0xed, 0x88, 0x3e, 0x04,
	0x05, 0xaa, 0x32, 0x73, 0x52, 0x5b, 0x5d, 0x7e, 0x7b, 0xe0, 0x3f, 0x6e, 0x1e, 0x85, 0xdc, 0x43,
	0xcb, 0xe6, 0x49, 0x7a, 0x26, 0xf4, 0x71, 0x33, 0xf1, 0xb8, 0xbf, 0x8b, 0x8d, 0x37, 0xdd, 0x23,
	0xd7, 0xe0, 0x57, 0x1b, 0x91, 0x63, 0x2b, 0xf9, 0x1d, 0x76, 0x7c, 0xd2, 0x84, 0x75, 0xd7, 0x2d,
	0x04, 0x26, 0x48, 0xe2, 0x14, 0x8d, 0x5c, 0xff, 0xec, 0xbb, 0x83, 0xc0, 0x6c, 0x57, 0xf7, 0x35,
	0x72, 0x89, 0x7b, 0x3b, 0xd4, 0x35, 0xce, 0x82, 0x8a, 0x5f, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x64, 0x21, 0xfb, 0xa9, 0x8d, 0x02, 0x00, 0x00,
}
